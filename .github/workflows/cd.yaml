name: Continuous Delivery
on:
  push:
    tags: 
      - '[0-9]+.[0-9]+.[0-9]+*'

env:
  PROJECT_DIR: ${{ github.workspace }}
  TAG_REF: "refs/tags/0."
  GH_ORG: "gnomestack"
  GH_USER: "bowtiedgnome"
  GH_KEY: ${{ secrets.GH_PACKAGES_PAT }}
  NUGET_KEY: ${{ secrets.NUGET_ORG_API_KEY }}
  BUILD_CFG: "Release"


jobs:
  build: 
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: 🧳 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

#    - name: "🦕 Setup Deno"
#      uses: denoland/setup-deno@v1
#      with:
#        deno-version: v1.x

#    - name: "🔥 Install Fire"
#      run: |
#        deno install --unstable -qAn fire "https://deno.land/x/gs_fire@0.0.0/cli.ts"

    - name: 🔧 Setup .NET Core # Required to execute ReportGenerator
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
        dotnet-quality: 'ga'

    - name: 🔁 Restore 
      run: |
        dotnet restore ./pl.sln
      working-directory: ${{ env.PROJECT_DIR }}

    - name: 🏭 Build
      run: |
        dotnet build ./pl.sln --no-restore -c '${{ env.BUILD_CFG }}'
      working-directory: ${{ env.PROJECT_DIR }}

    - name: 🧪 Test
      run: |
        dotnet test ./pl.sln --no-restore --no-build -c '${{ env.BUILD_CFG }}'
      working-directory: ${{ env.PROJECT_DIR }}

    - name: 📦 Pack
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        dotnet pack ./pl.sln --no-restore --no-build -c '${{ env.BUILD_CFG }}' --output './.artifacts/packages'
      working-directory: ${{ env.PROJECT_DIR }}

    - name: 🔼 Upload Artifacts
      uses: actions/upload-artifact@v3
      if: ${{ matrix.os == 'ubuntu-latest' }}
      with:
        name: "nupkgs"
        path: .artifacts/packages/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: 🧳 Checkout
      uses: actions/checkout@v4

 #   - name: "🦕 Setup Deno"
 #     uses: denoland/setup-deno@v1
 #     with:
 #       deno-version: v1.x

 #   - name: "🔥 Install Fire"
 #     run: |
 #       deno install --unstable -qAn fire "https://deno.land/x/gs_fire@0.0.0/cli.ts"

    - name: 🔽 Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: "nupkgs"
        path: ".artifacts/packages"
        
    - name: 📦 Github Publish
      run: |
        $token = '${{ env.GH_KEY }}'
        if ($token -eq 'NOT_SET' -or '' -eq $token) {
          throw 'GH_KEY is not set'
        }

        dotnet nuget add source `
          --username ${{ env.GH_USER }} `
          --password $token `
          --store-password-in-clear-text `
          --name "github" `
          'https://nuget.pkg.github.com/${{ env.GH_ORG }}/index.json'

        dotnet nuget list source

        dotnet nuget push './.artifacts/packages/*.nupkg' `
          --skip-duplicate `
          --source "github" `
          --api-key $token
      shell: pwsh
      if: ${{ startsWith(github.ref, env.TAG_REF) }}
      working-directory: ${{ env.PROJECT_DIR }}

    - name: 🌭 Evaluate Tag Ref
      run: echo 'ref ${{ github.ref}} => ${{ env.TAG_REF }}?'

#    - name: Nuget Publish
#      run: |
#        $token = '${{ env.NUGET_KEY }}'
#        if ($token -eq 'NOT_SET' -or '' -eq $token) {
#          throw 'NUGET_KEY is not set'
#        }
#
#        dotnet nuget push './.artifacts/packages/*.nupkg' `
#          --skip-duplicate `
#          --source "nuget.org" `
#          --api-key $token
#      if: ${{ startsWith(github.ref, env.TAG_REF) }}
#      working-directory: ${{ env.PROJECT_DIR }}